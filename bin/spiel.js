// Generated by CoffeeScript 1.3.3
(function() {
  var files, fs, headersObj, helpers, linkedFiles, markdown, options, out, path, specFiles, srcFiles, template;

  path = require('path');

  fs = require('fs');

  markdown = require('github-flavored-markdown').parse;

  helpers = require('./helpers');

  options = helpers.getOptions();

  files = [];

  srcFiles = [];

  specFiles = [];

  headersObj = {};

  linkedFiles = [];

  out = null;

  if (options == null) {
    throw new Error('speil -> Missing options argument');
  }

  if (options.root == null) {
    throw new Error('speil -> Missing options.root argument');
  }

  if (options.output == null) {
    throw new Error('speil -> Missing options.output argument');
  }

  options.root = helpers.setRootPath(options.root);

  if (!fs.existsSync(options.output)) {
    fs.mkdirSync(options.output, 511);
  }

  files = helpers.processJsDoc(helpers.processFiles(options.root));

  headersObj = helpers.parseHeaders(files, 'h1');

  linkedFiles = helpers.fileLinker(files, headersObj.headers, options.root);

  linkedFiles.push({
    name: "_index.html",
    content: helpers.indexLinker(headersObj.headers, options.output),
    source: null
  });

  helpers.processTemplate(options, ['css', 'js', 'imgs']);

  template = fs.readFileSync(options.template + '/index.html', "utf8").toString();

  linkedFiles.forEach(function(file) {
    return fs.writeFileSync(path.join(options.output, file.name), helpers.renderTemplate(file, template), 'utf8');
  });

}).call(this);
